// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package model;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collection;
import java.util.Date;
import java.util.List;

/************************************************************/
/**
 * 
 */
public class ShoppingCart {

	public ShoppingCart(int cartId, int productId, int quantity, String dateAdded, int totalPrice) {
		super();
		this.cartId = cartId;
		this.productId = productId;
		this.quantity = quantity;
		this.dateAdded = dateAdded;
		this.totalPrice = totalPrice;
	}

	public ShoppingCart() {
		// TODO Auto-generated constructor stub
	}

	/**
	 * 
	 */
	private int cartId;
	/**
	 * 
	 */
	private int productId;
	/**
	 * 
	 */
	private int quantity;
	/**
	 * 
	 */
	private String dateAdded;
	/**
	 * 
	 */
	private int totalPrice;

	public int getCartId() {
		return cartId;
	}

	public void setCartId(int cartId) {
		this.cartId = cartId;
	}

	public int getProductId() {
		return productId;
	}

	public void setProductId(int productId) {
		this.productId = productId;
	}

	public int getQuantity() {
		return quantity;
	}

	public void setQuantity(int quantity) {
		this.quantity = quantity;
	}

	public String getDateAdded() {
		return dateAdded;
	}

	public void setDateAdded(String dateAdded) {
		this.dateAdded = dateAdded;
	}

	public int getTotalPrice() {
		return totalPrice;
	}

	public void setTotalPrice(int totalPrice) {
		this.totalPrice = totalPrice;
	}

	/**
	 * @param batmanBook
	 * 
	 */
	List<Book> oclcartlist = new ArrayList<>();
	public static List<ShoppingCart> cartlist = new ArrayList<>();

	public int addCartItem(Book book, Customer customer, int quantity) {

		cartlist = Utils.getCartData(customer.getEmail());

		int cartId = 0;

		try {
			ShoppingCart cart = new ShoppingCart();
			cart.setProductId(book.getISBN());
			cart.setQuantity(quantity);
			cart.setTotalPrice(quantity * book.getPrice());
			Date date = Calendar.getInstance().getTime();
			DateFormat dateFormat = new SimpleDateFormat("ddMMyyyy");
			cart.setDateAdded(dateFormat.format(date));

			cartId = Utils.addNewCartItem(customer, cart);

		} catch (Exception e) {
			e.printStackTrace();
		}
		return cartId;
	}

	public boolean ocladdCartItem(Book book, Customer customer) {

		boolean flag = false;

		if (book != null && customer.isBlacklisted() != true && (!cartlist.contains(book))) {
			// verify if the book already exist
			oclcartlist.add(book);
			flag = true;
		}
		if (flag = true) {
			if (!oclcartlist.contains(book)) {
				flag = false;
			}
		}
		return flag;
	}

	/**
	 * 
	 */

	/**
	 * 
	 */
	public void updateQuantity() {
		System.out.println("Method to update quantity for the cartitem");
	}

	/**
	 * @param sarfaraz
	 * @param bookList
	 * 
	 */
	public void checkOut(List<Book> bookList, Customer customer) {

		calcTotalPrice(bookList, customer);

	}

	/**
	 * @param card1
	 * 
	 */

	/**
	 * 
	 */
	public List<Book> viewCartDetails() {

		return oclcartlist;
	}

	public boolean deleteCartItem(Book book) {
		boolean flag = false;

		if (book != null && (oclcartlist.contains(book))) {
			oclcartlist.remove(book);
			flag = true;
		}
		if (flag = true) {
			if (oclcartlist.contains(book)) {
				flag = false;
			}
		}

		return flag;

	}

	public boolean calcTotalPrice(List<Book> bookList, Customer sarfaraz) {
		int totalprice = 0;
		boolean flag = false;

		for (int i = 0; i < bookList.size(); i++) {
			if (i != bookList.size() - 1) {

				totalprice = bookList.get(i).getPrice();
				flag = true;

			}

		}
		System.out.println("totalPrice" + totalprice);
		return flag;
	}

}
