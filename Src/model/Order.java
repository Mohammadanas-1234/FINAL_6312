// --------------------------------------------------------
// Code generated by Papyrus Java
// --------------------------------------------------------

package model;

import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

/************************************************************/
/**
 * 
 */
public class Order {

	public Order(String dateCreated, String dateShipped, String customerName, String customerId, String status,
			int shippingId, int orderId) {
		super();
		this.dateCreated = dateCreated;
		
		this.dateShipped = dateShipped;
		this.customerName = customerName;
		this.customerId = customerId;
		this.status = status;
		this.shippingId = shippingId;
		this.orderId = orderId;
	}
	public Order() {
		
	}
	/**
	 * 
	 */
	private String dateCreated;
	/**
	 * 
	 */
	private String dateShipped;
	/**
	 * 
	 */
	private String customerName;
	/**
	 * 
	 */
	private String customerId;
	/**
	 * 
	 */
	private String status;
	/**
	 * 
	 */
	private int shippingId;
	/**
	 * 
	 */
	private int orderId;

	public String getDateCreated() {
		return dateCreated;
	}

	public void setDateCreated(String dateCreated) {
		this.dateCreated = dateCreated;
	}

	public String getDateShipped() {
		return dateShipped;
	}

	public void setDateShipped(String dateShipped) {
		this.dateShipped = dateShipped;
	}

	public String getCustomerName() {
		return customerName;
	}

	public void setCustomerName(String customerName) {
		this.customerName = customerName;
	}

	public String getCustomerId() {
		return customerId;
	}

	public void setCustomerId(String customerId) {
		this.customerId = customerId;
	}

	public String getStatus() {
		return status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	public int getShippingId() {
		return shippingId;
	}

	public void setShippingId(int shippingId) {
		this.shippingId = shippingId;
	}

	public int getOrderId() {
		return orderId;
	}

	public void setOrderId(int orderId) {
		this.orderId = orderId;
	}

	/**
	 * @param list
	 *            // update ocl constraints for shopping cart 100 books to a book
	 *            with no more than 100 orders at a time and add code for the same
	 */
	public boolean verifyOrderLimit(List<Order> list) {
		//orderId != 0 && shippingId != 0 && 
		if (list.size() <=100) {
			return true;
		} else
			return false;

	}

	List<Book> orderlist = new ArrayList<>();

	public boolean updateOrder(Book book, Customer customer) {

		boolean flag = false;
		// verify if the book already exist and book is not null.
		if (book != null && customer.isBlacklisted() != true && (!orderlist.contains(book))) {

			orderlist.add(book);
			System.out.println("Order Placed");
			flag = true;
		}
		if (flag = true) {
			if (!orderlist.contains(book)) {
				flag = false;
			}
		}
		return flag;
	}
	

	
	public int checkOut(Book book, Customer customer, int quantity) {
		
		
		int orderID=0;
		try {
			Date date = Calendar.getInstance().getTime();  
			DateFormat dateFormat = new SimpleDateFormat("ddMMyyyy"); 
			
			Order order = new Order();
			OrderDetail orderDetail= new OrderDetail();
			order.setCustomerId(customer.getEmail());
			order.setCustomerName(customer.getCustomerName());
			order.setDateCreated(dateFormat.format(date));
			order.setDateShipped(dateFormat.format(date));
			order.setStatus("Order Placed");
			order.setOrderId(orderId);
			orderDetail.setOrderId(orderID);
			orderDetail.setProductId(book.getISBN());
			orderDetail.setProductName(book.getProductName());
			orderDetail.setQuantity(quantity);
			orderDetail.setUnitCost(book.getPrice());
			orderDetail.setSubTotal(quantity*book.getPrice());
			
			orderId=Utils.addNewOrder(customer, order, orderDetail);
			
		}
		catch(Exception e) {
			e.printStackTrace();
		}
		return orderId;
	}
	

}
